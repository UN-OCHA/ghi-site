<?php

/**
 * @file
 * Contains hook implementations for the GHI documents module.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\ghi_documents\DocumentManager;
use Drupal\ghi_sections\Entity\GlobalSection;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ghi_documents_form_node_document_edit_form_alter(&$form, FormStateInterface &$form_state) {

  // Restrict access to the team field.
  if (!\Drupal::currentUser()->hasPermission('administer teams')) {
    $form['field_team']['#disabled'] = TRUE;
    $form['field_team']['widget']['#description'] = t('You do not have permission to change the team for this section.');
  }
}

/**
 * Implements hook_subpage_navigation_links().
 */
function ghi_documents_subpage_navigation_links_alter(&$links, array $context, array &$cache_tags) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $context['node'];

  /** @var \Drupal\node\NodeInterface $base_entity */
  $base_entity = $context['base_entity'];

  if ($node->bundle() == DocumentManager::DOCUMENT_BUNDLE && $base_entity instanceof GlobalSection) {
    // Document subpages of global sections, shouldn't have any navigation
    // links for the moment.
    $links = [];
  }

  // Load documents for the base entity.
  /** @var \Drupal\ghi_documents\DocumentManager $document_manager */
  $document_manager = \Drupal::service('ghi_documents.manager');

  $documents = $document_manager->loadNodesForSection($base_entity);
  if (empty($documents)) {
    return;
  }

  foreach ($documents as $document) {
    // We merge the cache cags even if the document node is not available, as
    // that might change.
    $cache_tags = Cache::mergeTags($cache_tags, $document->getCacheTags());

    // Check if the page should be visible.
    if (!$document->access('view')) {
      continue;
    }
    $link = $document->toLink(NULL, 'canonical', ['fragment' => 'page-title'])->toRenderable();
    if ($node->id() == $document->id() && ($document->access('view') || $document->access('update'))) {
      $link['#attributes']['class'][] = 'active';
      if (!$document->isPublished()) {
        $link['#attributes']['class'][] = 'node--unpublished';
      }
      // Get the subheadings and add quick links on the current page.
      $subheadings = $document_manager->getSubHeadings($document);
      if (!empty($subheadings)) {
        $link['children'] = [];
        foreach ($subheadings as $id => $subheading) {
          $link['children'][] = Link::fromTextAndUrl($subheading, Url::fromUserInput('#' . $id))->toString();
        }
      }
    }
    $links[] = $link;
  }
}

/**
 * Implements hook_is_subpage_type().
 */
function ghi_documents_is_subpage_type($node_type) {
  return in_array($node_type, [DocumentManager::DOCUMENT_BUNDLE]);
}
