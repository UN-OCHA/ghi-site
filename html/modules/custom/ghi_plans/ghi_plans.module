<?php

/**
 * @file
 * Contains hook implementations for the GHI Plans module.
 *
 * The migration hooks in this file could also be put into an event handler.
 *
 * @see https://www.drupal.org/docs/upgrading-drupal/customize-migrations-when-upgrading-to-drupal-8-or-later#s-migrate-plus-provides-a-prepare-row-event
 */

use Drupal\Core\Cache\CacheableMetadata;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Render\Markup;
use Drupal\ghi_plans\Helpers\PlanStructureHelper;
use Drupal\hpc_common\Helpers\CommonHelper;

/**
 * Implements hook_page_attachments().
 */
function ghi_plans_page_attachments(array &$page) {
  $cache = CacheableMetadata::createFromRenderArray($page);
  $page['#attached']['html_head_link'][] = [
    [
      'href' => 'https://fonts.googleapis.com/icon?family=Material+Icons',
      'rel' => 'stylesheet',
    ],
  ];
  // Apply updated caching information.
  $cache->applyTo($page);
}

/**
 * Implements hook_form_alter().
 */
function ghi_plans_form_alter(&$form, FormStateInterface &$form_state, $form_id) {
  if (CommonHelper::isAjaxRequest()) {
    return;
  }
  $valid_form_ids = [
    'node_plan_edit_form',
    'node_plan_entity_edit_form',
    'node_governing_entity_edit_form',
  ];
  if (!in_array($form_id, $valid_form_ids)) {
    return;
  }

  // Disable all form elements except the listed ones.
  $allow_editing = [
    'form_id',
    'form_build_id',
    'form_token',
    'field_content',
    'status',
  ];
  foreach (Element::children($form) as $element_key) {
    if (in_array($element_key, $allow_editing)) {
      continue;
    }
    $form[$element_key]['#disabled'] = 'disabled';
  }
  \Drupal::messenger()->addWarning(t('Most of the data in this form is imported automatically from the HPC API and should not be changed here.'));
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ghi_plans_form_node_plan_edit_form_alter(&$form, FormStateInterface &$form_state) {
  $node = $form_state->getFormObject()->getEntity();
  $plan_structure = PlanStructureHelper::getRpmPlanStructure($node);
  $form['field_plan_structure_rpm']['widget'][0]['preview'] = $form['field_plan_structure_rpm']['widget'][0]['value'];
  $form['field_plan_structure_rpm']['widget'][0]['value']['#access'] = FALSE;
  $form['field_plan_structure_rpm']['widget'][0]['preview']['#rows'] = 20;
  $form['field_plan_structure_rpm']['widget'][0]['preview']['#default_value'] = Markup::create(print_r($plan_structure, TRUE));

  $reporting_periods = unserialize($form['field_plan_reporting_periods']['widget'][0]['value']['#default_value']);
  $form['field_plan_reporting_periods']['widget'][0]['preview'] = $form['field_plan_reporting_periods']['widget'][0]['value'];
  $form['field_plan_reporting_periods']['widget'][0]['value']['#access'] = FALSE;
  $form['field_plan_reporting_periods']['widget'][0]['preview']['#rows'] = 20;
  $form['field_plan_reporting_periods']['widget'][0]['preview']['#default_value'] = Markup::create(print_r($reporting_periods, TRUE));
}
